From 239ecdc89966e33366e0597c095fdde7b2f758ed Mon Sep 17 00:00:00 2001
From: Rajavardhan Gundi <rajavardhan.gundi@intel.com>
Date: Sun, 31 Jan 2021 23:03:22 +0530
Subject: [PATCH] peci: driver: Wait until rx fifo gets filled up
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

While running RdIaMsr peci cmd, observed when FW attempts to
read last byte (Response FCS), PECI host controller returned
“Read FIFO” empty. Since “Read FIFO” is empty FW didn’t read
response FCS. Due to this issue, FW getting corrupted response
from PECI controller for all the subsequent PECI commands.

Next GetTemp call from thermal thread, resulting in corrupted
response values (mapping to huge temperature number 200+ degC)
from SOC. Since EC observing temp > 103 degC, EC is triggering
shutdown.

To address this issue, FW waits for “Read FIFO” to be filled-up
by the PECI controller.

HSD: https://hsdes.intel.com/appstore/article/#/16012457215.

Signed-off-by: Diwakar C <diwakar.c@intel.com>
---
 drivers/peci/peci_mchp_xec.c | 40 +++++++++++++++++++++++-------------
 1 file changed, 26 insertions(+), 14 deletions(-)

diff --git a/drivers/peci/peci_mchp_xec.c b/drivers/peci/peci_mchp_xec.c
index 53a1b3742a..00ea44654d 100644
--- a/drivers/peci/peci_mchp_xec.c
+++ b/drivers/peci/peci_mchp_xec.c
@@ -24,6 +24,8 @@ LOG_MODULE_REGISTER(peci_mchp_xec, CONFIG_PECI_LOG_LEVEL);
 #define PECI_IDLE_TIMEOUT   50u
 /* Maximum retries */
 #define PECI_TIMEOUT_RETRIES 3u
+/* Maximum read buffer fill wait retries */
+#define PECI_RX_BUF_FILL_WAIT_RETRY 100u
 
 /* 10 us */
 #define PECI_IO_DELAY       10
@@ -230,28 +232,38 @@ static int peci_xec_read(const struct device *dev, struct peci_msg *msg)
 	int ret;
 	u8_t tx_fcs;
 	u8_t bytes_rcvd;
+	u8_t wait_timeout_cnt;
 	struct peci_buf *rx_buf = &msg->rx_buffer;
 	PECI_Type *base = peci_xec_config.base;
 
 	/* Attempt to read data from RX FIFO */
 	bytes_rcvd = 0;
 	for (i = 0; i < (rx_buf->len + PECI_FCS_LEN); i++) {
-		/* Check if data available */
-		if (!(base->STATUS2 & MCHP_PECI_STS2_RFE)) {
-			if (i == 0) {
-				/* Get write block FCS just for debug */
-				tx_fcs = base->RD_DATA;
-				LOG_DBG("TX FCS %x", tx_fcs);
-			} else if (i == (rx_buf->len + 1)) {
-				/* Get read block FCS, but don't count it */
-				rx_buf->buf[i-1] = base->RD_DATA;
-			} else {
-				/* Get response */
-				rx_buf->buf[i-1] = base->RD_DATA;
-				bytes_rcvd++;
+		/* Worst case timeout will be 1msec (100 * 10usec) */
+		wait_timeout_cnt = PECI_RX_BUF_FILL_WAIT_RETRY;
+		/* Wait for read buffer to fill up */
+		while (base->STATUS2 & MCHP_PECI_STS2_RFE) {
+			k_usleep(PECI_IO_DELAY);
+			wait_timeout_cnt--;
+			if (!wait_timeout_cnt) {
+				LOG_WRN("Rx buffer empty");
+				return -ETIMEDOUT;
 			}
 		}
-	}
+
+		if (i == 0) {
+			/* Get write block FCS just for debug */
+			tx_fcs = base->RD_DATA;
+			LOG_DBG("TX FCS %x", tx_fcs);
+		} else if (i == (rx_buf->len + 1)) {
+			/* Get read block FCS, but don't count it */
+			rx_buf->buf[i-1] = base->RD_DATA;
+		} else {
+			/* Get response */
+			rx_buf->buf[i-1] = base->RD_DATA;
+			bytes_rcvd++;
+		}
+ 	}
 
 	/* Check if transaction is as expected */
 	if (rx_buf->len != bytes_rcvd) {
-- 
2.17.1

